name: 'comment'
description: 'Action to comment {touchstone} results on the appropriate PR. Needs read/write access.'
inputs:
  GITHUB_TOKEN:
    description: 'The GITHUB_TOKEN secret.'
    required: true
runs:
  using: "composite"
  steps:
    - name: 'Download artifact'
      uses: actions/github-script@v3.1.0
      with:
        script: |
          var artifacts = await github.actions.listWorkflowRunArtifacts({
             owner: context.repo.owner,
             repo: context.repo.repo,
             run_id: ${{github.event.workflow_run.id }},
          });
          var matchArtifact = artifacts.data.artifacts.filter((artifact) => {
            return artifact.name == "pr"
          })[0];
          var download = await github.actions.downloadArtifact({
             owner: context.repo.owner,
             repo: context.repo.repo,
             artifact_id: matchArtifact.id,
             archive_format: 'zip',
          });
          var fs = require('fs');
          fs.writeFileSync('${{github.workspace}}/pr.zip', Buffer.from(download.data));
    - run: unzip pr.zip
      shell: bash
    - name: 'Comment on PR'
      uses: actions/github-script@v3
      with:
        github-token: ${{ inputs.GITHUB_TOKEN }}
        script: |
          var fs = require('fs');
          var issue_number = Number(fs.readFileSync('./NR'));
          var body = fs.readFileSync('./info.txt').toString();
          await github.issues.createComment({
            owner: context.repo.owner,
            repo: context.repo.repo,
            issue_number: issue_number,
            body: body
          });
    - uses: action/github-script@v5
      if: always()
      with:
        script: |
          let url = '${{ github.event.workflow_run.html_url }}'

          if(${{ github.event.workflow_run.conclusion == 'failure' || failure() }} ) {
            const state = 'failure'
            const description = 'Commenting failed!'
            if(${{ failure() }}) {
              url = "https://github.com/${{github.repository}}/actions/" + 
                    "${{ github.run_id }}"
            }
          } else {
            const state = 'success'
            const description = 'Commenting succeeded!'
          }

          github.rest.repos.createCommitStatus({
            owner: context.repo.owner,
            repo: context.repo.repo,
            sha: '${{ github.event.workflow_run.head_sha}}',
            state: state,
            target_url: url,
            description: description,
            context: 'touchstone comment'
          })
